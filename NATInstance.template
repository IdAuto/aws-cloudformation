{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Builds a NAT host in each public subnet. **WARNING** This template creates Amazon EC2 instance(s).",

  "Parameters" : {
    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
    },

    "VpcCidrBlock" : {
      "Default" : "10.0.0.0/16",
      "Description" : "Enter the CIDR Block for VPC (e.g. 10.100.0.0/16)",
      "Type" : "String",
      "MinLength": "9",
      "MaxLength": "18",
      "AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/)(\\d|[1-2]\\d|3[0-2])$",
      "ConstraintDescription" : "Only supports CIDR Block syntax"
    },    

    "VpcId" : {
      "Type" : "String",
      "Description" : "VpcId of your existing Virtual Private Cloud (VPC)"
    },

    "SubnetIdA" : {
      "Type" : "String",
      "Description" : "SubnetId of PublicSubnetA"
    },

    "SubnetIdB" : {
      "Type" : "String",
      "Description" : "SubnetId of PublicSubnetB"
    }
  },

  "Mappings" : {
    "AWSNATAMI": {
      "us-east-1": {"AMI": "ami-6e9e4b06"},
      "us-west-2": {"AMI": "ami-8b6912bb"},
      "us-west-1": {"AMI": "ami-1d2b2958"},
      "eu-west-1": {"AMI": "ami-14913f63"}
    }
  },

  "Resources" : {

    "NATIPAddressA" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc",
        "InstanceId" : { "Ref" : "NATDeviceA" }
      }
    },

    "NATIPAddressB" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc",
        "InstanceId" : { "Ref" : "NATDeviceB" }
      }
    },

    "NATDeviceA" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType" : "t2.micro",
        "KeyName" : { "Ref" : "KeyName" },
        "SubnetId" : { "Ref" : "SubnetIdA" },
        "SourceDestCheck" : "false",
        "ImageId" : { "Fn::FindInMap" : [ "AWSNATAMI", { "Ref" : "AWS::Region" }, "AMI" ]},
        "SecurityGroupIds" : [{ "Ref" : "NATSecurityGroup" }]
      }
    },

    "NATDeviceB" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType" : "t2.micro",
        "KeyName" : { "Ref" : "KeyName" },
        "SubnetId" : { "Ref" : "SubnetIdB" },
        "SourceDestCheck" : "false",
        "ImageId" : { "Fn::FindInMap" : [ "AWSNATAMI", { "Ref" : "AWS::Region" }, "AMI" ]},
        "SecurityGroupIds" : [{ "Ref" : "NATSecurityGroup" }]
      }
    },

    "NATSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable internal access to the NAT device",
        "VpcId" : { "Ref" : "VpcId" },
        "SecurityGroupEgress" : [
          { "IpProtocol" : "tcp", "FromPort" : "0", "ToPort" : "65535", "CidrIp" :  { "Ref" : "VpcCidrBlock" } }
        ]
      }
    },

    "PrivateRouteTableA" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VpcId"},
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
          {"Key" : "Network", "Value" : "Private Route" }
        ]
      }
    },

    "PrivateRouteA" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Ref" : "NATDeviceA" }
      }
    },

    "PrivateRouteTableB" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VpcId"},
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
          {"Key" : "Network", "Value" : "Private Route" }
        ]
      }
    },

    "PrivateRouteB" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Ref" : "NATDeviceB" }
      }
    }

  },

  "Outputs" : {

    "PrivateRouteTableIdA" : {
      "Value" : {"Ref" : "PrivateRouteTableA"},
      "Description" : "Private Route Table ID"
    },

    "PrivateRouteTableIdB" : {
      "Value" : {"Ref" : "PrivateRouteTableB"},
      "Description" : "Private Route Table ID"
    }

  }
}